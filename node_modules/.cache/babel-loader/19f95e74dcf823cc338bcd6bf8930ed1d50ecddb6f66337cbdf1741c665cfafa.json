{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project sample\\\\SpeakNote Remind\\\\frontend\\\\src\\\\contexts\\\\ReminderContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReminderContext = /*#__PURE__*/createContext(undefined);\nexport const useReminders = () => {\n  _s();\n  const context = useContext(ReminderContext);\n  if (context === undefined) {\n    throw new Error('useReminders must be used within a ReminderProvider');\n  }\n  return context;\n};\n_s(useReminders, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ReminderProvider = ({\n  children\n}) => {\n  _s2();\n  const [reminders, setReminders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    isAuthenticated\n  } = useAuth();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  const fetchReminders = async () => {\n    if (!isAuthenticated) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/reminders`);\n      setReminders(response.data);\n    } catch (error) {\n      console.error('Failed to fetch reminders:', error);\n      toast.error('Failed to load reminders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createReminder = async reminderData => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_BASE_URL}/reminders`, reminderData);\n      const newReminder = response.data;\n      setReminders(prev => [...prev, newReminder]);\n      toast.success('Reminder created successfully!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Failed to create reminder:', error);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to create reminder';\n      toast.error(message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateReminder = async (id, reminderData) => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`${API_BASE_URL}/reminders/${id}`, reminderData);\n      const updatedReminder = response.data;\n      setReminders(prev => prev.map(reminder => reminder.id === id ? updatedReminder : reminder));\n      toast.success('Reminder updated successfully!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Failed to update reminder:', error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to update reminder';\n      toast.error(message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteReminder = async id => {\n    try {\n      setLoading(true);\n      await axios.delete(`${API_BASE_URL}/reminders/${id}`);\n      setReminders(prev => prev.filter(reminder => reminder.id !== id));\n      toast.success('Reminder deleted successfully!', {\n        id: 'reminder-delete-toast'\n      });\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Failed to delete reminder:', error);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to delete reminder';\n      toast.error(message, {\n        id: 'reminder-delete-toast'\n      });\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const markCompleted = async id => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_BASE_URL}/reminders/${id}/complete`);\n      const updatedReminder = response.data;\n      setReminders(prev => prev.map(reminder => reminder.id === id ? updatedReminder : reminder));\n      toast.success('Reminder completed!');\n      return true;\n    } catch (error) {\n      console.error('Failed to mark reminder as completed:', error);\n      toast.error('Failed to update reminder status');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUpcomingReminders = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/reminders/upcoming`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch upcoming reminders:', error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchReminders();\n    }\n  }, [isAuthenticated]);\n  const value = {\n    reminders,\n    loading,\n    createReminder,\n    updateReminder,\n    deleteReminder,\n    markCompleted,\n    fetchReminders,\n    fetchUpcomingReminders\n  };\n  return /*#__PURE__*/_jsxDEV(ReminderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s2(ReminderProvider, \"OOdgb3bi9VE3PzOONcmu4IfunCc=\", false, function () {\n  return [useAuth];\n});\n_c = ReminderProvider;\nvar _c;\n$RefreshReg$(_c, \"ReminderProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","useAuth","jsxDEV","_jsxDEV","ReminderContext","undefined","useReminders","_s","context","Error","ReminderProvider","children","_s2","reminders","setReminders","loading","setLoading","isAuthenticated","API_BASE_URL","process","env","REACT_APP_API_URL","fetchReminders","response","get","data","error","console","createReminder","reminderData","post","newReminder","prev","success","_error$response","_error$response$data","message","detail","updateReminder","id","put","updatedReminder","map","reminder","_error$response2","_error$response2$data","deleteReminder","delete","filter","_error$response3","_error$response3$data","markCompleted","fetchUpcomingReminders","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project sample/SpeakNote Remind/frontend/src/contexts/ReminderContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { useAuth } from './AuthContext';\r\n\r\ninterface Reminder {\r\n  id: number;\r\n  title: string;\r\n  description?: string;\r\n  scheduled_for: string;\r\n  created_at: string;\r\n  updated_at?: string;\r\n  is_completed: boolean;\r\n  is_important: boolean;\r\n  original_text?: string;\r\n  confidence_score?: number;\r\n  source_type?: string;\r\n  image_url?: string;\r\n  user_id: number;\r\n}\r\n\r\ninterface ReminderContextType {\r\n  reminders: Reminder[];\r\n  loading: boolean;\r\n  createReminder: (reminderData: Partial<Reminder>) => Promise<boolean>;\r\n  updateReminder: (id: number, reminderData: Partial<Reminder>) => Promise<boolean>;\r\n  deleteReminder: (id: number) => Promise<boolean>;\r\n  markCompleted: (id: number) => Promise<boolean>;\r\n  fetchReminders: () => Promise<void>;\r\n  fetchUpcomingReminders: () => Promise<Reminder[]>;\r\n}\r\n\r\nconst ReminderContext = createContext<ReminderContextType | undefined>(undefined);\r\n\r\nexport const useReminders = () => {\r\n  const context = useContext(ReminderContext);\r\n  if (context === undefined) {\r\n    throw new Error('useReminders must be used within a ReminderProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ReminderProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ReminderProvider: React.FC<ReminderProviderProps> = ({ children }) => {\r\n  const [reminders, setReminders] = useState<Reminder[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { isAuthenticated } = useAuth();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  const fetchReminders = async () => {\r\n    if (!isAuthenticated) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${API_BASE_URL}/reminders`);\r\n      setReminders(response.data);\r\n    } catch (error: any) {\r\n      console.error('Failed to fetch reminders:', error);\r\n      toast.error('Failed to load reminders');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createReminder = async (reminderData: Partial<Reminder>): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(`${API_BASE_URL}/reminders`, reminderData);\r\n      const newReminder = response.data;\r\n      setReminders(prev => [...prev, newReminder]);\r\n      toast.success('Reminder created successfully!');\r\n      return true;\r\n    } catch (error: any) {\r\n      console.error('Failed to create reminder:', error);\r\n      const message = error.response?.data?.detail || 'Failed to create reminder';\r\n      toast.error(message);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateReminder = async (id: number, reminderData: Partial<Reminder>): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.put(`${API_BASE_URL}/reminders/${id}`, reminderData);\r\n      const updatedReminder = response.data;\r\n      setReminders(prev => prev.map(reminder => \r\n        reminder.id === id ? updatedReminder : reminder\r\n      ));\r\n      toast.success('Reminder updated successfully!');\r\n      return true;\r\n    } catch (error: any) {\r\n      console.error('Failed to update reminder:', error);\r\n      const message = error.response?.data?.detail || 'Failed to update reminder';\r\n      toast.error(message);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteReminder = async (id: number): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.delete(`${API_BASE_URL}/reminders/${id}`);\r\n      setReminders(prev => prev.filter(reminder => reminder.id !== id));\r\n      toast.success('Reminder deleted successfully!', { id: 'reminder-delete-toast' });\r\n      return true;\r\n    } catch (error: any) {\r\n      console.error('Failed to delete reminder:', error);\r\n      const message = error.response?.data?.detail || 'Failed to delete reminder';\r\n      toast.error(message, { id: 'reminder-delete-toast' });\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const markCompleted = async (id: number): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(`${API_BASE_URL}/reminders/${id}/complete`);\r\n      const updatedReminder = response.data;\r\n      setReminders(prev => prev.map(reminder => \r\n        reminder.id === id ? updatedReminder : reminder\r\n      ));\r\n      toast.success('Reminder completed!');\r\n      return true;\r\n    } catch (error: any) {\r\n      console.error('Failed to mark reminder as completed:', error);\r\n      toast.error('Failed to update reminder status');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUpcomingReminders = async (): Promise<Reminder[]> => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/reminders/upcoming`);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Failed to fetch upcoming reminders:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchReminders();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const value: ReminderContextType = {\r\n    reminders,\r\n    loading,\r\n    createReminder,\r\n    updateReminder,\r\n    deleteReminder,\r\n    markCompleted,\r\n    fetchReminders,\r\n    fetchUpcomingReminders\r\n  };\r\n\r\n  return (\r\n    <ReminderContext.Provider value={value}>\r\n      {children}\r\n    </ReminderContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}